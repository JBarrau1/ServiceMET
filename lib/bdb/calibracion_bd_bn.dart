import 'dart:io';
import 'package:csv/csv.dart';
import 'package:file_picker/file_picker.dart';
import 'package:sqflite/sqflite.dart';
import 'package:path/path.dart';

class DatabaseHelperbn {
  static final DatabaseHelperbn _instance = DatabaseHelperbn._internal();
  factory DatabaseHelperbn() => _instance;
  static Database? _database;

  DatabaseHelperbn._internal();

  Future<Database> get database async {
    if (_database != null) return _database!;
    _database = await _initDatabase();
    return _database!;
  }

  Future<Database> _initDatabase() async {
    String path = join(await getDatabasesPath(), 'bn_calibracion.db');
    return await openDatabase(
      path,
      version: 1,
      onCreate: onCreate,
    );
  }

  Future<void> onCreate(Database db, int version) async {
    await db.execute('''
      CREATE TABLE registros_calibracion_bn (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        empresa TEXT,
        planta TEXT,
        dep_planta TEXT,
        personal TEXT,
        sticker TEXT,
        
        equipo TEXT,
        certificado TEXT,
        ente_calibrador TEXT,
        estado TEXT,
        cantidad INTEGER,
        equipo_2 TEXT,
        certificado_2 TEXT,
        ente_calibrador_2 TEXT,
        estado_2 TEXT,
        cantidad_2 INTEGER,
        equipo_3 TEXT,
        certificado_3 TEXT,
        ente_calibrador_3 TEXT,
        estado_3 TEXT,
        cantidad_3 INTEGER,
        equipo_4 TEXT,
        certificado_4 TEXT,
        ente_calibrador_4 TEXT,
        estado_4 TEXT,
        cantidad_4 INTEGER,
        equipo_5 TEXT,
        certificado_5 TEXT,
        ente_calibrador_5 TEXT,
        estado_5 TEXT,
        cantidad_5 INTEGER,
        
        cod_metrica TEXT,
        cod_int TEXT,
        tipo_equipo TEXT,
        marca TEXT,
        modelo TEXT,
        serie TEXT,
        unidades TEXT,
        ubicacion TEXT,
        pmax1 REAL,
        d1 REAL,
        e1 REAL,
        dec1 REAL,
        pmax2 REAL,
        d2 REAL,
        e2 REAL,
        dec2 REAL,
        pmax3 REAL,
        d3 REAL,
        e3 REAL,
        dec3 REAL,
        
        hora_inicio TEXT,
        tiempo_estab TEXT,
        t_ope_balanza TEXT,
        vibracion TEXT,
        polvo TEXT,
        temp TEXT,
        humedad TEXT,
        mesada TEXT,
        iluminacion TEXT,
        limp_foza TEXT,
        estado_drenaje TEXT,
        limp_general TEXT,
        golpes_terminal TEXT,
        nivelacion TEXT,
        limp_recepto TEXT,
        golpes_receptor TEXT,
        encendido TEXT,
        precarga1 REAL,
        p_indicador1 REAL,
        precarga2 REAL,
        p_indicador2 REAL,
        precarga3 REAL,
        p_indicador3 REAL,
        precarga4 REAL,
        p_indicador4 REAL,
        precarga5 REAL,
        p_indicador5 REAL,
        precarga6 REAL,
        p_indicador6 REAL,
        ajuste TEXT,
        tipo TEXT,
        cargas_pesas TEXT,
        hora TEXT,
        hri TEXT,
        ti TEXT,
        patmi TEXT,
        tipo_plataforma TEXT,
        puntos_ind TEXT,
        carga TEXT,
        posicion1 REAL,
        indicacion1 REAL,
        retorno1 REAL,
        posicion2 REAL,
        indicacion2 REAL,
        retorno2 REAL,
        posicion3 REAL,
        indicacion3 REAL,
        retorno3 REAL,
        posicion4 REAL,
        indicacion4 REAL,
        retorno4 REAL,
        posicion5 REAL,
        indicacion5 REAL,
        retorno5 REAL,
        posicion6 REAL,
        indicacion6 REAL,
        retorno6 REAL,
        repetibilidad1 REAL,
        indicacion1_1 REAL,
        retorno1_1 REAL,      
        indicacion1_2 REAL,
        retorno1_2 REAL,
        indicacion1_3 REAL,
        retorno1_3 REAL,
        indicacion1_4 REAL,
        retorno1_4 REAL,
        indicacion1_5 REAL,
        retorno1_5 REAL,
        indicacion1_6 REAL,
        retorno1_6 REAL,
        indicacion1_7 REAL,
        retorno1_7 REAL,
        indicacion1_8 REAL,
        retorno1_8 REAL,
        indicacion1_9 REAL,
        retorno1_9 REAL,
        indicacion1_10 REAL,
        retorno1_10 REAL,
        
        repetibilidad2 REAL,
        indicacion2_1 REAL,
        retorno2_1 REAL,
        indicacion2_2 REAL,
        retorno2_2 REAL,
        indicacion2_3 REAL,
        retorno2_3 REAL,
        indicacion2_4 REAL,
        retorno2_4 REAL,
        indicacion2_5 REAL,
        retorno2_5 REAL,
        indicacion2_6 REAL,
        retorno2_6 REAL,
        indicacion2_7 REAL,
        retorno2_7 REAL,
        indicacion2_8 REAL,
        retorno2_8 REAL,
        indicacion2_9 REAL,
        retorno2_9 REAL,
        indicacion2_10 REAL,
        retorno2_10 REAL,
        
        repetibilidad3 REAL,
        indicacion3_1 REAL,
        retorno3_1 REAL,
        indicacion3_2 REAL,
        retorno3_2 REAL,
        indicacion3_3 REAL,
        retorno3_3 REAL,
        indicacion3_4 REAL,
        retorno3_4 REAL,
        indicacion3_5 REAL,
        retorno3_5 REAL,
        indicacion3_6 REAL,
        retorno3_6 REAL,
        indicacion3_7 REAL,
        retorno3_7 REAL,
        indicacion3_8 REAL,
        retorno3_8 REAL,
        indicacion3_9 REAL,
        retorno3_9 REAL,
        indicacion3_10 REAL,
        retorno3_10 REAL,
        metodo TEXT,
        metodo_carga TEXT,
        
        lin1 REAL,
        ind1 REAL,
        lin2 REAL,
        ind2 REAL,
        lin3 REAL,
        ind3 REAL,
        lin4 REAL,
        ind4 REAL,
        lin5 REAL,
        ind5 REAL,
        lin6 REAL,
        ind6 REAL,
        lin7 REAL,
        ind7 REAL,
        lin8 REAL,
        ind8 REAL,
        lin9 REAL,
        ind9 REAL,
        lin10 REAL,
        ind10 REAL,
        lin11 REAL,
        ind11 REAL,
        lin12 REAL,
        ind12 REAL,
        lin13 REAL,
        ind13 REAL,
        lin14 REAL,
        ind14 REAL,
        lin15 REAL,
        ind15 REAL,
        lin16 REAL,
        ind16 REAL,
        lin17 REAL,
        ind17 REAL,
        lin18 REAL,
        ind18 REAL,
        lin19 REAL,
        ind19 REAL,
        lin20 REAL,
        ind20 REAL,
        lin21 REAL,
        ind21 REAL,
        lin22 REAL,
        ind22 REAL,
        lin23 REAL,
        ind23 REAL,
        lin24 REAL,
        ind24 REAL,
        lin25 REAL,
        ind25 REAL,
        lin26 REAL,
        ind26 REAL,
        lin27 REAL,
        ind27 REAL,
        lin28 REAL,
        ind28 REAL,
        lin29 REAL,
        ind29 REAL,
        lin30 REAL,
        ind30 REAL,
        lin31 REAL,
        ind31 REAL,
        lin32 REAL,
        ind32 REAL,
        lin33 REAL,
        ind33 REAL,
        lin34 REAL,
        ind34 REAL,
        lin35 REAL,
        ind35 REAL,
        lin36 REAL,
        ind36 REAL,
        lin37 REAL,
        ind37 REAL,
        lin38 REAL,
        ind38 REAL,
        lin39 REAL,
        ind39 REAL,
        lin40 REAL,
        ind40 REAL,
        lin41 REAL,
        ind41 REAL,
        lin42 REAL,
        ind42 REAL,
        lin43 REAL,
        ind43 REAL,
        lin44 REAL,
        ind44 REAL,
        lin45 REAL,
        ind45 REAL,
        lin46 REAL,
        ind46 REAL,
        lin47 REAL,
        ind47 REAL,
        lin48 REAL,
        ind48 REAL,
        lin49 REAL,
        ind49 REAL,
        lin50 REAL,
        ind50 REAL,
        lin51 REAL,
        ind51 REAL,
        lin52 REAL,
        ind52 REAL,
        lin53 REAL,
        ind53 REAL,
        lin54 REAL,
        ind54 REAL,
        lin55 REAL,
        ind55 REAL,
        lin56 REAL,
        ind56 REAL,
        lin57 REAL,
        ind57 REAL,
        lin58 REAL,
        ind58 REAL,
        lin59 REAL,
        ind59 REAL,
        lin60 REAL,
        ind60 REAL,
        
        hora_fin TEXT,
        hri_fin TEXT,
        ti_fin TEXT,
        patmi_fin TEXT,
        mant_soporte TEXT,
        venta_pesas TEXT,
        reemplazo TEXT,
        observaciones TEXT,
        emp TEXT,
        indicar TEXT,
        factor TEXT,
        regla_aceptacion TEXT
      )
    ''');
  }

  Future<void> insertRegistro(Map<String, dynamic> registro) async {
    final db = await database;
    await db.insert('registros_calibracion_bn', registro);
  }

  Future<void> exportDataToCSV() async {
    final db = await database;
    final List<Map<String, dynamic>> registros =
        await db.query('registros_calibracion_bn');

    if (registros.isEmpty) {
      print('No hay datos para exportar');
      return;
    }

    List<List<dynamic>> rows = [];
    rows.add(registros.first.keys.toList()); // Agregar encabezados

    for (var registro in registros) {
      rows.add(registro.values.toList());
    }

    String csv = const ListToCsvConverter().convert(rows);

    String? outputFile = await FilePicker.platform.saveFile(
      dialogTitle: 'Guardar archivo CSV',
      fileName: 'registros_calibracion.csv',
      type: FileType.custom,
      allowedExtensions: ['csv'],
    );

    if (outputFile != null) {
      final file = File(outputFile);
      await file.writeAsString(csv);
      print('Datos exportados a $outputFile');
    } else {
      print('Exportaci√≥n cancelada');
    }
  }
}
